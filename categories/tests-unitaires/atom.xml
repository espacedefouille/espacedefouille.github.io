<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Espace de fouille]]></title><link href="espacedefouille.org/categories/tests-unitaires/atom.xml" rel="self"/><link href="espacedefouille.org/"/><updated>2015-04-10T15:00:05+02:00</updated><id>espacedefouille.org/</id><author><name><![CDATA[Frédéric Bouquet]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Comment nommer ses tests unitaires]]></title><link href="espacedefouille.org/blog/2015/04/23/comment-nommer-ses-tests-unitaires/"/><updated>2015-04-23T15:30:40+02:00</updated><id>/blog/2015/04/23/comment-nommer-ses-tests-unitaires/</id><content type="html"><![CDATA[<p>Bonne idée que celle proposée par <a href="http://googletesting.blogspot.fr/2007/02/tott-naming-unit-tests-responsibly.html">cet article</a>
pour nommer ses tests unitaires.</p>
<p>L'idée est d'utiliser le nom de la classe à tester comme le sujet de la phrase décrite dans le test. Par exemple :</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>  <span class="kd">class</span> <span class="nc">HtmlLinkRewriterTest</span> <span class="o">...</span> <span class="o">{</span>
</span><span class='line'>      <span class="kt">void</span> <span class="nf">testAppendsAdditionalParameterToUrlsInHrefAttributes</span><span class="o">(){?}</span>
</span><span class='line'>      <span class="kt">void</span> <span class="nf">testDoesNotRewriteImageOrJavascriptLinks</span><span class="o">(){?}</span>
</span><span class='line'>      <span class="kt">void</span> <span class="nf">testThrowsExceptionIfHrefContainsSessionId</span><span class="o">(){?}</span>
</span><span class='line'>      <span class="kt">void</span> <span class="nf">testEncodesParameterValue</span><span class="o">(){?}</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>
<p>Tests qui peuvent ensuite être compris ainsi :</p>
<blockquote><p>HtmlLinkRewriter appends additional param to URLs in href attrs.<br  />
HtmlLinkRewriter does not rewrite image or JavaScript links.<br  />
HtmlLinkRewriter throws exception if href contains session ID.<br  />
HtmlLinkRewriter encodes parameter value.<br  /></p>
</blockquote>
<p>Plusieurs intérêts par rapport à cette méthode. Cela permet :</p>
<ul>
<li>d'expliciter les responsabilités et fonctionnalités de la classe</li>
<li>de repérer des "code smell".<ul>
<li>Ne pas pouvoir utiliser le nom de la classe testée comme premier mot d'une phrase est souvent signe d'une mauvaise
place pour le test</li>
<li>Une classe difficile à décrire veut souvent dire qu'elle dispose de trop de responsabilités</li>
</ul>
</li>
</ul>
<p>Certains outils permettent d'ailleurs de formater le nom des tests comme une documentation de la classe. C'est le cas
du plugin TestDox.</p>
]]></content></entry></feed>