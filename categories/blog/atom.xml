<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom"><title><![CDATA[Espace de fouille]]></title><link href="espacedefouille.org/categories/blog/atom.xml" rel="self"/><link href="espacedefouille.org/"/><updated>2015-04-10T15:00:05+02:00</updated><id>espacedefouille.org/</id><author><name><![CDATA[Frédéric Bouquet]]></name></author><generator uri="http://sysgears.com/grain/">Grain</generator><entry><title type="html"><![CDATA[Grain+Github et nom de domaine personnalisé]]></title><link href="espacedefouille.org/blog/2015/04/15/grain-github-et-nom-de-domaine-personnalise/"/><updated>2015-04-15T11:41:50+02:00</updated><id>/blog/2015/04/15/grain-github-et-nom-de-domaine-personnalise/</id><content type="html"><![CDATA[<p>Grain est un moteur de site web statique écrit en groovy. L'idée est d'utiliser Grain pour générer un blog (cet espace
de fouille) et de stocker le tout comme une github page. L'ensemble, bien qu'assez simple et rapide nécessite les étapes
suivantes :
1. Téléchargement d'un thème
2. Configuration
3. Sauvegarde du "backend"
4. Génération des pages et publication sur Github
5. Associer un nom de domaine</p>
<h1>Téléchargement d'un thème</h1>
<p>Un site grain est ce que l'on appelle un thème. L'équipe Grain et la communauté en proposent plusieurs qui peuvent être
téléchargés ici : <a href="http://sysgears.com/grain/themes/">page de thèmes</a></p>
<p>Il est aussi possible de récupérer un thème directement depuis Github, mais une archive suffit la plupart du temps.</p>
<p>Une fois l'espace de travail de grain créé à partir du thème, la bête se compose ainsi :
- content : les différentes pages qui forment le site
- theme : les fichiers relatifs au thème, que ce soit les éléments graphiques ou les commandes custom
- SiteConfig.groovy : la configuration du site (infos générales, plugins activés, ...)</p>
<p>Tester le site nécessite simplement à exécuter la commande
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>grainw
</span></code></pre></td></tr></table></div></figure>
et à se connecter à <a href="http://localhost:4000">http://localhost:4000</a></p>
<h1>Configuration</h1>
<p>Tout se passe dans le fichier SiteConfig.groovy. Les commentaires du fichier aident à s'y retrouver.</p>
<p>La configuration du dépôt github se situe dans la variable gh<em>pages</em>url.</p>
<h1>Sauvegarde du backend</h1>
<p>Le dépôt actuel contient les fichiers qui permettront de générer le site. Il convient donc de stocker l'ensemble
dans un dépôt différent que le site lui même. De mon côté, j'utilise soit un dépôt privé sur l'un de mes serveurs
ou un dépôt privé bitbucket.</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>git remote add origin <span class="nt">&lt;gitremoteurl&gt;</span>
</span></code></pre></td></tr></table></div></figure>
<h1>Génération des pages et publication sur Github</h1>
<p>Dans le cas d'un blog à partir du thème <a href="https://github.com/sysgears/grain-theme-octopress">octopress</a>, il est possible
de créer un post à partir de la commande :</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>./grainw create-post &quot;Nom du post&quot;
</span></code></pre></td></tr></table></div></figure>
<p>Le fichier correspondant sera créé dans content/blog</p>
<p>Générer les pages en vue d'une publication :</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>./grainw generate
</span></code></pre></td></tr></table></div></figure>
<p>Déployer le site sur github pages:</p>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>./grainw deploy
</span></code></pre></td></tr></table></div></figure>
<p>J'utilise une organisation github et je pousse les pages générées dans le dépôt <nom_organisation>.github.io comme
précisé dans la doc <a href="https://pages.github.com/">github pages</a></p>
<h1>Associer un nom de domaine</h1>
<p>Par défaut, le site sera accessible via <nom_organisation>.github.io. Dans la plupart des cas, on préfère un nom de
domaine spécifique, comme c'est le cas pour l'espace de fouille.</p>
<p>Pour ce faire, il convient de louer un nom de domaine au près d'un provider comme Gandi ou OVH. Une fois fait, la
configuration nécessite la création d'une redirection (CNAME) vers <nom_organisation>.github.io.
Une fois fait, une fois la propagation terminée (pouvant aller jusqu'à 2 jours), il faut préciser à github que le nom
de domaine à utiliser pour le site statique est personnalisé.</p>
<p>Cela se fait en ajoutant à la racine du site un fichier CNAME. Pour nous, ce fichier est à créer dans content.
Le fichier contient simplement le nom de domaine à utiliser (pour moi : espacedefouille.org).</p>
<p>Une fois le site déployé, il sera accessible via son nom de domaine.</p>
]]></content></entry></feed>